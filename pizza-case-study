--Serious sql Pizza case study
/*
A. Pizza Metrics
1.How many pizzas were ordered?
2.How many unique customer orders were made?
3.How many successful orders were delivered by each runner?
4.How many of each type of pizza was delivered?
5.How many Vegetarian and Meatlovers were ordered by each customer?
What was the maximum number of pizzas delivered in a single order?
For each customer, how many delivered pizzas had at least 1 change and how many had no changes?
How many pizzas were delivered that had both exclusions and extras?
What was the total volume of pizzas ordered for each hour of the day?
What was the volume of orders for each day of the week?
*/

--Question 1
SELECT
  COUNT(order_id)
FROM pizza_runner.customer_orders;

--Question 2

SELECT
  COUNT (DISTINCT order_id)
FROM pizza_runner.customer_orders;

--Question 3
SELECT
  runner_id,
  COUNT(order_id)
FROM pizza_runner.runner_orders
WHERE distance <> 'null'
GROUP BY runner_id;

--Question 4
SELECT
  pizza_names.pizza_name AS pizza_type,
  COUNT(customer_orders.order_id) AS delivery_count
FROM pizza_runner.customer_orders customer_orders
INNER JOIN pizza_runner.pizza_names pizza_names
ON customer_orders.pizza_id = pizza_names.pizza_id
INNER JOIN pizza_runner.runner_orders r
ON customer_orders.order_id = r.order_id
WHERE r.distance <> 'null'
GROUP BY pizza_type;

--Question 5
SELECT
  customer_orders.customer_id AS customer,
  pizza_names.pizza_name AS pizza_type,
  COUNT(customer_orders.order_id) AS delivery_count
FROM pizza_runner.customer_orders customer_orders
INNER JOIN pizza_runner.pizza_names pizza_names
ON customer_orders.pizza_id = pizza_names.pizza_id
GROUP BY customer, pizza_type
ORDER BY customer;


--Question 6
WITH pizza_count AS (
SELECT
  customer_orders.order_id AS order_id,
  COUNT(customer_orders.pizza_id) AS pizza_count
FROM pizza_runner.customer_orders customer_orders
INNER JOIN pizza_runner.runner_orders runner_orders
ON customer_orders.order_id = runner_orders.order_id
WHERE distance <> 'null'
GROUP BY customer_orders.order_id
)

SELECT
  order_id,
  MAX(pizza_count) AS max_delivery
FROM pizza_count
GROUP BY order_id
ORDER BY max_delivery DESC;

--Question 7

--Question 8
SELECT
  SUM(CASE WHEN c.exclusions IS NOT NULL AND c.extras IS NOT NULL THEN 1 ELSE 0 END ) AS change_count
FROM pizza_runner.customer_orders c
INNER JOIN pizza_runner.runner_orders r
ON c.order_id = r.order_id
WHERE distance <> 'null';


--Question 9
SELECT EXTRACT('hour' FROM order_time) AS hour,
COUNT(order_id)
FROM pizza_runner.customer_orders
GROUP BY hour
ORDER BY hour;

--Question 10
SELECT EXTRACT('dow' FROM order_time) AS day_of_week,
COUNT(order_id)
FROM pizza_runner.customer_orders
GROUP BY day_of_week
ORDER BY day_of_week;

--This solution does not use the TO_CHAR function which would convert TIMESTAMP to STRING
--Technically not the right solution from case study solutions

lets see 
